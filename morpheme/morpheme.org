#+TITLE: Gesture Morphemes
A =morpheme=, in the context of gesture, is a construct
that's used to construct Coordinated Gesture Paths (CGP).
CGP are gesture paths that run parallel to one another, and
are tightly related somehow, to the point where modifying
one path could require modifying all the other paths. Using
morphemes, CGPs can be constructed simultaneously, one
slice at a time.

A morpheme is made up of a set of gesture paths, where
every path has an identical duration. Keeping the duration
the same is important to the design of the morpheme, as
it is what allows morphemes to be put together in a
sequence without having to worry about the underlying
gestures going out of sync.

To ensure that paths encapsulated in a morpheme
always have the same duration, a proportional duration
system is used. Rather than use the rate multiplier
fractional value represented as two integer values, a
proportional duration is represented as a single positive
non-zero integer. This unit indicates how long a particular
segment is relative to the path. So, if a gesture path
had a segment with value of 1, a segment with a value of 3
would be 3 times longer.

Proportional durations are only relative to the path they
belong to. Different paths can have different proportions,
allowing for interesting polyrhythms to occur.

By default, a morpheme takes up one beat, however its
duration can be stretched and squashed to fit inside beats
bars, or units smaller than beats.

The term "morpheme" is a term borrowed from linguistics
used to describe an atomic unit in language. It's pretty
close to what is being done in this context, and of all
the common "phemes" used in linguistics (phoneme, grapheme,
morpheme), the best fit for Gesture.

To convert proportional durations to actual durations
(expressed,as rate multipliers in Gesture), find the
least common multiple for all the path lengths, rescale
the paths so their lengths match, then convert to rate
multiplier values using the LCM and the morpheme scaling
factor. Note that *duration* is a unit describes the overall
time, while *length* describes the sum of all the ratio
units for a path when duration is expressed in proportional
terms.

The process of converting a morpheme structure into gesture
paths can be done with the =morpheme= function, defined
in lua code below. It takes in a morpheme structure =m=,
and a scaling value =r=.

The morpheme structure =m= should be a table key-value
pairs, where the key is the name of the gesture, and the
value is a @!(ref "path" "gesture path")!@ using
proportional notation.

For example:

#+BEGIN_SRC lua
morpheme({
    a={{60, 3, 3}, {67, 1, 3}, {58, 2, 3}},
    b={{63, 1, 3}, {65, 1, 3}, {63, 1, 3}, {62, 1, 3}}
}, {1, 3})
#+END_SRC

Should yield:

#+BEGIN_SRC lua
{
    a={
        {60, {2, 3}, 3},
        {67, {2, 1}}, 3},
        {58, {1, 1}, 3}
    },
    b={
        {63, {4,3}, 3},
        {65, {4,3}, 3},
        {63, {4,3}, 3},
        {62, {4,3}, 3}
    }
}
#+END_SRC

#+NAME: morpheme.lua
#+BEGIN_SRC lua :tangle morpheme/morpheme.lua
function morpheme(m, r)
    -- Get lengths of each gesture path
    -- Find LCM of path lengths
    -- rescale paths
    -- convert to rate multiplier
    -- simplify multiplier fractions, if possible
    -- check to make sure multiplier values are in range
end
#+END_SRC
