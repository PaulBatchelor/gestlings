#+TITLE: A synthetic whistle sound (WIP)
This program constructs a roughly pure tone sound with a
bit of breath in. The idea behind this instrument is
that it could be used for producing sounds with birdsong-like
qualities to it.

#+NAME: whistle.lua
#+BEGIN_SRC lua :tangle whistle/whistle.lua
Whistle = {}
<<oscillator>>
return Whistle
#+END_SRC

The core sound generator of the whistle sound is the
oscillator. This takes in 3 parameters in the form
of first-order functions: frequency, amplitude and
timbre.

#+NAME: oscillator
#+BEGIN_SRC lua
function Whistle.osc(params)
    local sig = sig or params.sig
    local core = core or params.core

    fsig = sig:new()

    freq = params.freq or core.paramf(440)
    amp = params.amp or core.paramf(0.8)
    timbre = params.timbre or core.paramf(0.5)

    freq()
    fsig:hold()
    lil("noise; butlp zz 2000; peakeq zz 500 250 2")

    fsig:get()
    lil("mtof zz")
    fsig:get()
    lil("add zz 0.1; mtof zz")
    fsig:get()

    lil("sub zz 0.1; mtof zz")
    lil("sub zz zz")
    lil("butbp zz zz zz; mul zz [dblin 10]")

    fsig:get()
    lil("blsquare [mtof zz]; mul zz [dblin -3]")
    lil("butlp zz 300; buthp zz 300")
    timbre()
    lil("crossfade zz zz zz")
    fsig:unhold()
    amp()
    lil("mul zz zz")
end
#+END_SRC
