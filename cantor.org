#+TITLE: Cantor

#+NAME: cantor.c
#+BEGIN_SRC c :tangle cantor.c
#include <stdlib.h>
#include "lua.h"
#include "lauxlib.h"
#include "lualib.h"

#include "lua.h"
int mno_lua_main_noloader(int argc, char *argv[]);
void mno_lua_load(lua_State *L);
void mno_lua_clean(lua_State *L);
int luaopen_protogestling(lua_State *L);
int luaopen_bitrune(lua_State *L);

int mno_lua_main(int argc, char **argv,
                 void (*load)(lua_State*),
                 void (*clean)(lua_State*));

static void load(lua_State *L)
{
    mno_lua_load(L);
    luaL_requiref(L, "protogestling", luaopen_protogestling, 1);
    luaL_requiref(L, "bitrune", luaopen_bitrune, 1);
}

static void clean(lua_State *L)
{
    mno_lua_clean(L);
}

int main(int argc, char *argv[])
{
    return mno_lua_main(argc, argv, load, clean);
}
#+END_SRC
